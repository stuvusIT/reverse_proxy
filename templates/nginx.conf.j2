# vim: sw=4 ts=4 ft=nginx
# {{ ansible_managed }}
user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
	worker_connections 768;
}

http {
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	server_tokens off;
	
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
	ssl_prefer_server_ciphers on;

	log_format ext_combined
		'[$time_iso8601] >>$upstream_addr <<$remote_addr - '
		'$status $request_method $scheme://$host$request_uri '
		'>>$bytes_sent($body_bytes_sent)bytes '
		'<<"$http_referer" -- <$http_user_agent> $request';

	access_log /var/log/nginx/access.log;
	access_log /var/log/nginx/access_ext_combined.log ext_combined;
	error_log /var/log/nginx/error.log;

	gzip on;
	gzip_disable "msie6";
	gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	server {
		listen 80;
		root /var/www/html;
		if ($http_user_agent !~ "Encrypt validation server" ) {
			add_header Strict-Transport-Security "max-age={{ hsts_max_age }}; includeSubDomains; preload" always; #lets encrypt has to be excluded from hsts
			return 302 https://$host$request_uri; #302 for testing, 301 in production
		}
	}
	include /etc/nginx/reverse_proxy.conf;
}
